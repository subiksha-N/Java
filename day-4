#Count vowels in a string
import java.util.Scanner;
public class demo6
{
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String str = sc.nextLine().toLowerCase(); // convert to lowercase
        int count = 0;
        for (int i = 0; i < str.length(); i++) {
            char ch = str.charAt(i);
            if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {
                count++;
            }
        }
        System.out.println("Number of vowels: " + count);
        sc.close();
    }
}
#Reverse a string
import java.util.Scanner;
public class demo6 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String str = sc.nextLine();
        String rev = "";
        for (int i = str.length() - 1; i >= 0; i--) {
            rev += str.charAt(i);
        }
        System.out.println("Reversed string: " + rev);
        sc.close();
    }
}
#Check if a string is a palindrome
import java.util.Scanner;
public class demo6 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String str = sc.nextLine().toLowerCase();
        String rev = "";
        for (int i = str.length() - 1; i >= 0; i--) {
            rev += str.charAt(i);
        }
        if (str.equals(rev))
            System.out.println("It's a palindrome!");
        else
            System.out.println("Not a palindrome.");
        sc.close();
    }
}
#Find duplicate characters
  import java.util.Scanner;
public class demo6 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String str = sc.nextLine().toLowerCase(); // ignore case
        int count;
        System.out.println("Duplicate characters:");
        for (int i = 0; i < str.length(); i++) {
            count = 1;
            char ch = str.charAt(i);
            if (ch == ' ' || ch == '0')  // skip spaces or visited chars
                continue;
            for (int j = i + 1; j < str.length(); j++) {
                if (str.charAt(j) == ch) {
                    count++;
                    // mark the duplicate as visited
                    str = str.substring(0, j) + '0' + str.substring(j + 1);
                }
            }
            if (count > 1)
                System.out.println(ch + " → " + count + " times");
        }
        sc.close();
    }
}
#Check if two strings are anagrams
  import java.util.Arrays;
import java.util.Scanner;
public class demo6 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter first string: ");
        String str1 = sc.nextLine().toLowerCase();
        System.out.print("Enter second string: ");
        String str2 = sc.nextLine().toLowerCase();
        str1 = str1.replaceAll("\\s", "");
        str2 = str2.replaceAll("\\s", "");
        if (str1.length() != str2.length()) {
            System.out.println("Not anagrams (different lengths)");
        } else {
            char[] a = str1.toCharArray();
            char[] b = str2.toCharArray();
            Arrays.sort(a);
            Arrays.sort(b);
            if (Arrays.equals(a, b))
                System.out.println("The strings are anagrams!");
            else
                System.out.println("Not anagrams.");
        }
        sc.close();
    }
}
#Compress a string using run-length encoding (e.g., aaabb → a3b2).
  import java.util.Scanner;
public class StringCompression {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String str = sc.nextLine();
        StringBuilder comp = new StringBuilder();
        int count = 1;
        for (int i = 0; i < str.length(); i++) {
            if (i + 1 < str.length() && str.charAt(i) == str.charAt(i + 1)) {
                count++;
            } else {
                comp.append(str.charAt(i)).append(count);
                count = 1; 
            }
        }
        System.out.println("Compressed string: " + comp);
        sc.close();
    }
}

  


  
